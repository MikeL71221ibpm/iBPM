#version: '3.8'

# Development Docker Compose configuration
# This extends the main docker-compose.yml for development use

services:
  # Development database with development settings
  postgres:
    environment:
      POSTGRES_DB: hrsn_analytics_dev
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
      - ./dev-seed.sql:/docker-entrypoint-initdb.d/dev-seed.sql:ro

  # Development Redis
  redis:
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    volumes:
      - redis_dev_data:/data

  # Development application with hot reload
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://dev_user:dev_password@postgres:5432/hrsn_analytics_dev
      - REDIS_URL=redis://redis:6379
      - SESSION_SECRET=dev-secret-key
      - LOG_LEVEL=debug
      - ENABLE_DEBUG=true
    ports:
      - "${APP_PORT:-5001}:5000"
    volumes:
      # Persistent development data (keep uploads/logs)
      - uploads_dev_data:/app/uploads
      - logs_dev_data:/app/logs
    depends_on:
      - postgres
      - redis
    command:
      - "npm"
      - "start"

  # PgAdmin for database management (development only)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: hrsn-pgadmin-dev
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: devops@maranihealth.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - hrsn-network

  # Redis Commander for Redis management (development only)
  redis-commander:
    image: rediscommander/redis-commander:latest
    platform: linux/amd64
    container_name: hrsn-redis-commander-dev
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - hrsn-network

  # Mailhog for email testing (development only)
  mailhog:
    image: mailhog/mailhog:latest
    platform: linux/amd64
    container_name: hrsn-mailhog-dev
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    networks:
      - hrsn-network

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  pgadmin_dev_data:
    driver: local
  uploads_dev_data:
    driver: local
  logs_dev_data:
    driver: local
  node_modules:
    driver: local

networks:
  hrsn-network:
    driver: bridge